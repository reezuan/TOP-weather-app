(()=>{"use strict";var e={360:(e,n,t)=>{t.d(n,{A:()=>c});var a=t(354),r=t.n(a),i=t(314),o=t.n(i)()(r());o.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Lexend+Deca:wght@100..900&family=Space+Grotesk:wght@300..700&display=swap);"]),o.push([e.id,'*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nhtml,\nbody {\n    width: 100%;\n    min-height: 100vh;\n}\n\nh1,\nh2,\nh3,\nh4 {\n    font-family: "Lexend Deca", Helvetica, Arial, sans-serif;\n    font-weight: 600;\n    color: white;\n}\n\nh2 {\n    font-size: 1.8rem;\n    margin: 0;\n}\n\np {\n    margin: 0;\n    color: white;\n}\n\ndiv {\n    color: white;\n}\n\nspan {\n    color: white;\n}\n\nbody {\n    margin: 0;\n    background: rgb(78,67,118);\n    background: linear-gradient(0deg, rgba(78,67,118,1) 0%, rgba(43,88,118,1) 100%);\n    font-size: 16px;\n    font-family: "Space Grotesk", Helvetica, Arial, sans-serif;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nmain {\n    width: 1000px;\n    text-align: center;\n    \n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto 1fr;\n    row-gap: 50px;\n    column-gap: 40px;\n}\n\nmain.hidden {\n    display: none;\n}\n\n#loading {\n    width: 60px;\n    height: 60px;\n    border: #f3f3f3 solid 5px;\n    border-top: #9c41f2 solid 6px;\n    border-radius: 100%;\n    margin: auto;\n    display: none;\n    animation: spin 1s infinite linear;\n}\n\n#loading.display {\n    display: block;\n}\n\n@keyframes spin {\n    from {\n        transform: rotate(0deg);\n    } to {\n        transform: rotate(360deg);\n    }\n}\n\n/* ---------- HEADER ---------- */\n\nheader {\n    margin: 20px 40px 30px;\n    width: calc(100vw - 80px);\n    \n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n}\n\n.site-logo {\n    width: 50px;\n    height: auto;\n\n    justify-self: start;\n}\n\n.search-bar {\n    justify-self: center;\n    width: clamp(200px, 100%, 290px);\n}\n\n.search-bar input {\n    padding: 10px 18px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    font-size: 1.02rem;\n}\n\n.search-bar input::placeholder {\n    color: #b5b5b5;\n}\n\nheader > div:last-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n\n    justify-self: end;\n}\n\n.unit-toggle {\n    cursor: pointer;\n    padding: 10px 24px;\n    border-radius: 20px;\n    border: none;\n    background-color: #293C4B;\n    color: white;\n    font-family: "Space Grotesk", Helvetica, Arial, sans-serif;\n    font-size: 0.88rem;\n    font-weight: 500;\n    border: transparent solid 2px;\n}\n\n.unit-toggle.active {\n    border: white solid 2px;\n}\n\n/* ---------- MAIN HEADING ---------- */\n\n.weather-heading {\n    margin: 15px 0 30px;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    grid-area: 1 / 1 / 2 / 3;\n    justify-self: center;\n}\n\n.weather-heading h2 {\n    margin: 0;\n}\n\n.weather-heading p {\n    margin: 0;\n}\n\n/* ---------- CURRENT WEATHER OVERVIEW ---------- */\n\n.current-weather-overview {\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: grid;\n    grid-template-columns: auto 1fr;\n    justify-items: start;\n    gap: 40px;\n}\n\n.current-weather-overview > img {\n    width: 100px;\n    height: auto;\n}\n\n.current-weather-overview > div > p {\n    text-align: left;\n    font-weight: 600;\n}\n\n.current-weather-overview > div > p:first-child {\n    font-size: 5rem;\n    margin-bottom: 16px;\n    line-height: 0.75;\n}\n\n.current-weather-overview > div > p:last-child {\n    font-size: 2.5rem;\n}\n\n.current-weather-details {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr 1fr;\n    row-gap: 30px;\n}\n\n.current-weather-details > div {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-template-rows: auto 1fr;\n    row-gap: 4px;\n    column-gap: 17px;\n    justify-items: start;\n}\n\n.current-weather-details > div > img {\n    width: 40px;\n    height: auto;\n\n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.current-weather-details > div > p {\n    margin: 0;\n    font-size: 0.9rem;\n\n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.current-weather-details > div > div,\n.current-weather-details > div > span {\n    font-size: 1.5rem;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\n/* ---------- WEEKLY FORECAST ---------- */\n\n.weekly-forecast {\n    width: 800px;\n    margin-top: 60px;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 45px;\n\n    grid-area: 3 / 1 / 4 / 3 ;\n    justify-self: center;\n}\n\n.forecast-list {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.forecast-item {\n    padding: 0 5px 10px;\n    border-bottom: white solid 1px;\n    \n    display: grid;\n    grid-template-columns: 2fr 1fr 1fr 1fr;\n    align-items: center;\n}\n\n.forecast-item:last-child {\n    border: none;\n}\n\n.forecast-item p {\n    text-align: left;\n}\n\n.rain-forecast {\n    display: flex;\n    gap: 20px;\n    align-items: center;\n}\n\n.rain-forecast img {\n    width: 40px;\n    height: auto;\n}',"",{version:3,sources:["webpack://./src/core/style.css"],names:[],mappings:"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",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Lexend+Deca:wght@100..900&family=Space+Grotesk:wght@300..700&display=swap\');\n\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nhtml,\nbody {\n    width: 100%;\n    min-height: 100vh;\n}\n\nh1,\nh2,\nh3,\nh4 {\n    font-family: "Lexend Deca", Helvetica, Arial, sans-serif;\n    font-weight: 600;\n    color: white;\n}\n\nh2 {\n    font-size: 1.8rem;\n    margin: 0;\n}\n\np {\n    margin: 0;\n    color: white;\n}\n\ndiv {\n    color: white;\n}\n\nspan {\n    color: white;\n}\n\nbody {\n    margin: 0;\n    background: rgb(78,67,118);\n    background: linear-gradient(0deg, rgba(78,67,118,1) 0%, rgba(43,88,118,1) 100%);\n    font-size: 16px;\n    font-family: "Space Grotesk", Helvetica, Arial, sans-serif;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nmain {\n    width: 1000px;\n    text-align: center;\n    \n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto auto 1fr;\n    row-gap: 50px;\n    column-gap: 40px;\n}\n\nmain.hidden {\n    display: none;\n}\n\n#loading {\n    width: 60px;\n    height: 60px;\n    border: #f3f3f3 solid 5px;\n    border-top: #9c41f2 solid 6px;\n    border-radius: 100%;\n    margin: auto;\n    display: none;\n    animation: spin 1s infinite linear;\n}\n\n#loading.display {\n    display: block;\n}\n\n@keyframes spin {\n    from {\n        transform: rotate(0deg);\n    } to {\n        transform: rotate(360deg);\n    }\n}\n\n/* ---------- HEADER ---------- */\n\nheader {\n    margin: 20px 40px 30px;\n    width: calc(100vw - 80px);\n    \n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n}\n\n.site-logo {\n    width: 50px;\n    height: auto;\n\n    justify-self: start;\n}\n\n.search-bar {\n    justify-self: center;\n    width: clamp(200px, 100%, 290px);\n}\n\n.search-bar input {\n    padding: 10px 18px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    font-size: 1.02rem;\n}\n\n.search-bar input::placeholder {\n    color: #b5b5b5;\n}\n\nheader > div:last-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n\n    justify-self: end;\n}\n\n.unit-toggle {\n    cursor: pointer;\n    padding: 10px 24px;\n    border-radius: 20px;\n    border: none;\n    background-color: #293C4B;\n    color: white;\n    font-family: "Space Grotesk", Helvetica, Arial, sans-serif;\n    font-size: 0.88rem;\n    font-weight: 500;\n    border: transparent solid 2px;\n}\n\n.unit-toggle.active {\n    border: white solid 2px;\n}\n\n/* ---------- MAIN HEADING ---------- */\n\n.weather-heading {\n    margin: 15px 0 30px;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    grid-area: 1 / 1 / 2 / 3;\n    justify-self: center;\n}\n\n.weather-heading h2 {\n    margin: 0;\n}\n\n.weather-heading p {\n    margin: 0;\n}\n\n/* ---------- CURRENT WEATHER OVERVIEW ---------- */\n\n.current-weather-overview {\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: grid;\n    grid-template-columns: auto 1fr;\n    justify-items: start;\n    gap: 40px;\n}\n\n.current-weather-overview > img {\n    width: 100px;\n    height: auto;\n}\n\n.current-weather-overview > div > p {\n    text-align: left;\n    font-weight: 600;\n}\n\n.current-weather-overview > div > p:first-child {\n    font-size: 5rem;\n    margin-bottom: 16px;\n    line-height: 0.75;\n}\n\n.current-weather-overview > div > p:last-child {\n    font-size: 2.5rem;\n}\n\n.current-weather-details {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr 1fr;\n    row-gap: 30px;\n}\n\n.current-weather-details > div {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-template-rows: auto 1fr;\n    row-gap: 4px;\n    column-gap: 17px;\n    justify-items: start;\n}\n\n.current-weather-details > div > img {\n    width: 40px;\n    height: auto;\n\n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.current-weather-details > div > p {\n    margin: 0;\n    font-size: 0.9rem;\n\n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.current-weather-details > div > div,\n.current-weather-details > div > span {\n    font-size: 1.5rem;\n    \n    grid-area: 2 / 2 / 3 / 3;\n}\n\n/* ---------- WEEKLY FORECAST ---------- */\n\n.weekly-forecast {\n    width: 800px;\n    margin-top: 60px;\n    \n    display: flex;\n    flex-direction: column;\n    gap: 45px;\n\n    grid-area: 3 / 1 / 4 / 3 ;\n    justify-self: center;\n}\n\n.forecast-list {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.forecast-item {\n    padding: 0 5px 10px;\n    border-bottom: white solid 1px;\n    \n    display: grid;\n    grid-template-columns: 2fr 1fr 1fr 1fr;\n    align-items: center;\n}\n\n.forecast-item:last-child {\n    border: none;\n}\n\n.forecast-item p {\n    text-align: left;\n}\n\n.rain-forecast {\n    display: flex;\n    gap: 20px;\n    align-items: center;\n}\n\n.rain-forecast img {\n    width: 40px;\n    height: auto;\n}'],sourceRoot:""}]);const c=o},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(a)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(o[d]=!0)}for(var s=0;s<e.length;s++){var A=[].concat(e[s]);a&&o[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),n.push(A))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(r," */");return[n].concat([i]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var i={},o=[],c=0;c<e.length;c++){var d=e[c],s=a.base?d[0]+a.base:d[0],A=i[s]||0,l="".concat(s," ").concat(A);i[s]=A+1;var p=t(l),u={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=r(u,a);a.byIndex=c,n.splice(c,0,{identifier:l,updater:m,references:1})}o.push(l)}return o}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=a(e=e||[],r=r||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var c=t(i[o]);n[c].references--}for(var d=a(e,r),s=0;s<i.length;s++){var A=t(i[s]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}i=d}}},659:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(a){var r=n[a];if(void 0!==r)return r.exports;var i=n[a]={id:a,exports:{}};return e[a](i,i.exports,t),i.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=a[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(72),n=t.n(e),a=t(825),r=t.n(a),i=t(659),o=t.n(i),c=t(56),d=t.n(c),s=t(540),A=t.n(s),l=t(113),p=t.n(l),u=t(360),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=o().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),n()(u.A,m),u.A&&u.A.locals&&u.A.locals;const f=t.p+"f826da3c383a50a40cb5.png";function h(){document.querySelector("#loading").classList.remove("display")}function g(){document.querySelector("main").classList.remove("hidden")}async function C(e,n="de15c36e45774dabab033138241306",t=8){try{document.querySelector("#loading").classList.add("display"),document.querySelector("main").classList.add("hidden");const a=function(e,n,t){return`https://api.weatherapi.com/v1/forecast.json?key=${e}&q=${n}&days=${t}`}(n,e,t),r=await fetch(a,{mode:"cors"}),i=await r.json();if(r.ok)return localStorage.setItem("lastSearch",e),i;throw h(),g(),i}catch(e){throw h(),g(),e}}function B(e){console.log(e),e.error&&e.error.code?1006===e.error.code?console.log("Error: No matching location found."):console.error(`Error: ${e.error.message}`):console.error("An unknown error occurred.",e)}function I(e){return`${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][e.getDay()]}, ${e.getDate()} ${["January","February","March","April","May","June","July","August","September","October","November","December"][e.getMonth()]} ${e.getFullYear()}`}function y(e){console.log(e);const n=localStorage.getItem("measurementSystem");document.querySelector("[data-city]").textContent=e.location.name,document.querySelector("[data-country]").textContent=e.location.country;const t=new Date(e.location.localtime);document.querySelector("[data-current-date]").textContent=I(t);const a=document.querySelector("[data-time-now]"),r=t.toTimeString();a.textContent=`${r.substring(0,2)}:${r.substring(3,5)}`,document.querySelector("[data-is-day]").dataset.isDay=1===e.current.is_day?"true":"false";const i=document.querySelector("[data-current-temp]"),o=document.querySelector("[data-feels-like]");"metric"===n?(i.textContent=e.current.temp_c,o.textContent=e.current.feelslike_c):"imperial"===n&&(i.textContent=e.current.temp_f,o.textContent=e.current.feelslike_f),document.querySelector("[data-general-forecast]").textContent=e.current.condition.text,document.querySelector("[data-wind-direction]").textContent=e.current.wind_dir,document.querySelector("[data-humidity]").textContent=e.current.humidity;const c=document.querySelector("[data-wind-speed]");"metric"===n?c.textContent=e.current.wind_kph:"imperial"===n&&(c.textContent=e.current.wind_mph),document.querySelector("[data-chance-of-rain]").textContent=e.forecast.forecastday[0].day.daily_chance_of_rain,document.querySelector("[data-uv-index]").textContent=e.current.uv;for(let t=1;t<e.forecast.forecastday.length;t++){document.querySelector(`[data-forecast-date][data-forecast-day="${t}"]`).textContent=I(new Date(e.forecast.forecastday[t].date));const a=document.querySelector(`[data-forecast-max-temp][data-forecast-day="${t}"]`),r=document.querySelector(`[data-forecast-min-temp][data-forecast-day="${t}"]`);"metric"===n?(a.textContent=e.forecast.forecastday[t].day.maxtemp_c,r.textContent=e.forecast.forecastday[t].day.mintemp_c):"imperial"===n&&(a.textContent=e.forecast.forecastday[t].day.maxtemp_f,r.textContent=e.forecast.forecastday[t].day.mintemp_f),document.querySelector(`[data-forecast-rain][data-forecast-day="${t}"]`).textContent=e.forecast.forecastday[t].day.daily_chance_of_rain}const d=document.querySelectorAll("[data-temperature-unit]"),s=document.querySelectorAll("[data-speed-unit]");d.forEach((e=>{"metric"===n?e.textContent="°C":"imperial"===n&&(e.textContent="°F")})),s.forEach((e=>{"metric"===n?e.textContent="km/h":"imperial"===n&&(e.textContent="mph")})),h(),g()}const b=t.p+"2557bb7504eaeca2d0fe.png",x=t.p+"e231e0e36fa0bbea491b.png",E=t.p+"3fa25f3d3a2cb3226fa2.png",w=t.p+"6908724de523f0a843d4.png",v=t.p+"09760300102da7b56f73.png",S=t.p+"1a91017026baae098f60.png",k=t.p+"909cb8645b43d69b368b.png",Y=t.p+"8c8c943018dd7508b11c.png";function L(e){const n=document.createElement("div");n.classList.add("forecast-item");const t=document.createElement("p");t.setAttribute("data-forecast-date",""),t.setAttribute("data-forecast-day",e);const a=document.createElement("p"),r=document.createElement("span");r.setAttribute("data-forecast-max-temp",""),r.setAttribute("data-forecast-day",e);const i=document.createElement("span");i.setAttribute("data-temperature-unit",""),a.append(r,i);const o=document.createElement("p"),c=document.createElement("span");c.setAttribute("data-forecast-min-temp",""),c.setAttribute("data-forecast-day",e);const d=document.createElement("span");d.setAttribute("data-temperature-unit",""),o.append(c,d);const s=document.createElement("div");s.classList.add("rain-forecast");const A=new Image;A.src=w;const l=document.createElement("p"),p=document.createElement("span");return p.setAttribute("data-forecast-rain",""),p.setAttribute("data-forecast-day",e),l.append(p,"%"),s.appendChild(A),s.appendChild(l),n.appendChild(t),n.appendChild(a),n.appendChild(o),n.appendChild(s),n}(()=>{const e=document.querySelector("body"),n=document.createElement("header"),t=document.createElement("div");t.appendChild(function(){const e=document.createElement("button");return e.textContent="°C, km/h",e.classList.add("unit-toggle"),"metric"!==localStorage.getItem("measurementSystem")&&localStorage.getItem("measurementSystem")||e.classList.add("active"),e.addEventListener("click",(()=>{localStorage.setItem("measurementSystem","metric"),document.querySelector(".unit-toggle.active").classList.remove("active"),e.classList.add("active"),C(localStorage.getItem("lastSearch")).then((e=>y(e))).catch((e=>B(e)))})),e}()),t.appendChild(function(){const e=document.createElement("button");return e.textContent="°F, mph",e.classList.add("unit-toggle"),"imperial"===localStorage.getItem("measurementSystem")&&e.classList.add("active"),e.addEventListener("click",(()=>{localStorage.setItem("measurementSystem","imperial"),document.querySelector(".unit-toggle.active").classList.remove("active"),e.classList.add("active"),C(localStorage.getItem("lastSearch")).then((e=>y(e))).catch((e=>B(e)))})),e}()),n.appendChild(function(){const e=document.createElement("div");e.classList.add("logo");const n=new Image;return n.src=f,n.className="site-logo",e.appendChild(n),e}()),n.appendChild(function(){const e=document.createElement("div"),n=document.createElement("form"),t=document.createElement("input");return e.classList.add("search-bar"),t.setAttribute("placeholder","Search city"),n.appendChild(t),e.appendChild(n),n.addEventListener("submit",(e=>{e.preventDefault(),C(t.value).then((e=>y(e))).catch((e=>B(e)))})),e}()),n.appendChild(t);const a=document.createElement("footer");e.appendChild(n),e.appendChild(function(){const e=document.createElement("main"),n=document.createElement("section");return n.classList.add("current-weather-details"),n.appendChild(function(){const e=document.createElement("div"),n=new Image;n.src=E;const t=document.createElement("p");t.textContent="Feels like";const a=document.createElement("div"),r=document.createElement("span");r.setAttribute("data-feels-like",""),r.setAttribute("data-temperature-fahrenheit",""),r.setAttribute("data-temperature-celsius","");const i=document.createElement("span");return i.setAttribute("data-temperature-unit",""),a.append(r,i),e.appendChild(n),e.appendChild(t),e.appendChild(a),e}()),n.appendChild(function(){const e=document.createElement("div"),n=new Image;n.src=k;const t=document.createElement("p");t.textContent="Wind direction";const a=document.createElement("span");return a.setAttribute("data-wind-direction",""),e.appendChild(n),e.appendChild(t),e.appendChild(a),e}()),n.appendChild(function(){const e=document.createElement("div"),n=new Image;n.src=v;const t=document.createElement("p");t.textContent="Humidity";const a=document.createElement("div"),r=document.createElement("span");return r.setAttribute("data-humidity",""),a.append(r,"%"),e.appendChild(n),e.appendChild(t),e.appendChild(a),e}()),n.appendChild(function(){const e=document.createElement("div"),n=new Image;n.src=Y;const t=document.createElement("p");t.textContent="Wind speed";const a=document.createElement("div"),r=document.createElement("span");r.setAttribute("data-wind-speed",""),r.setAttribute("data-speed-mph",""),r.setAttribute("data-speed-kph","");const i=document.createElement("span");return i.setAttribute("data-speed-unit",""),a.append(r,i),e.appendChild(n),e.appendChild(t),e.appendChild(a),e}()),n.appendChild(function(){const e=document.createElement("div"),n=new Image;n.src=w;const t=document.createElement("p");t.textContent="Chance of rain";const a=document.createElement("div"),r=document.createElement("span");return r.setAttribute("data-chance-of-rain",""),a.append(r,"%"),e.appendChild(n),e.appendChild(t),e.appendChild(a),e}()),n.appendChild(function(){const e=document.createElement("div"),n=new Image;n.src=S;const t=document.createElement("p");t.textContent="UV index";const a=document.createElement("span");return a.setAttribute("data-uv-index",""),e.appendChild(n),e.appendChild(t),e.appendChild(a),e}()),e.appendChild(function(){const e=document.createElement("section");e.classList.add("weather-heading");const n=document.createElement("h2"),t=document.createElement("span"),a=document.createElement("span");t.textContent="Singapore",a.textContent="Singapore",t.setAttribute("data-city",""),a.setAttribute("data-country",""),n.append(t,", ",a);const r=document.createElement("p"),i=document.createElement("span"),o=document.createElement("span");return i.setAttribute("data-current-date",""),o.setAttribute("data-time-now",""),r.append(i," | ",o),e.appendChild(n),e.appendChild(r),e}()),e.appendChild(function(){const e=document.createElement("section");e.classList.add("current-weather-overview");const n=new Image;n.setAttribute("data-is-day","");const t=new MutationObserver((e=>{e.forEach((e=>{"attributes"===e.type&&(t.disconnect(),"true"===n.getAttribute("data-is-day")?n.src=b:n.src=x,t.observe(n,{attributes:!0}))}))}));t.observe(n,{attributes:!0});const a=document.createElement("span");a.setAttribute("data-current-temp",""),a.setAttribute("data-temperature-fahrenheit",""),a.setAttribute("data-temperature-celsius","");const r=document.createElement("span");r.setAttribute("data-temperature-unit","");const i=document.createElement("p");i.append(a,r);const o=document.createElement("p");o.setAttribute("data-general-forecast","");const c=document.createElement("div");return c.appendChild(i),c.appendChild(o),e.appendChild(n),e.appendChild(c),e}()),e.appendChild(n),e.appendChild(function(){const e=document.createElement("section");e.classList.add("weekly-forecast");const n=document.createElement("h2");n.textContent="Weekly Forecast";const t=document.createElement("div");t.classList.add("forecast-list");for(let e=1;e<=7;e++)t.appendChild(L(e));return e.appendChild(n),e.appendChild(t),e}()),e}()),e.appendChild(function(){const e=document.createElement("div");return e.setAttribute("id","loading"),e}()),e.appendChild(a),localStorage.getItem("lastSearch")?C(localStorage.getItem("lastSearch")).then((e=>y(e))).catch((e=>B(e))):C("Singapore").then((e=>y(e))).catch((e=>B(e)))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,