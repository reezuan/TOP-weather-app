(()=>{"use strict";var e={360:(e,t,n)=>{n.d(t,{A:()=>i});var a=n(354),r=n.n(a),o=n(314),c=n.n(o)()(r());c.push([e.id,"*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nhtml,\nbody {\n    width: 100%;\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    background: rgb(255,105,97);\n    background: linear-gradient(0deg, rgba(255,105,97,1) 0%, rgba(253,253,150,1) 100%);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nheader {\n    margin: 20px 40px 30px;\n    width: calc(100vw - 80px);\n    \n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n}\n\n.site-logo {\n    width: 50px;\n    height: auto;\n\n    justify-self: start;\n}\n\n.search-bar {\n    justify-self: center;\n}\n\nheader > div:last-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n\n    justify-self: end;\n}\n\n/* ---------- MAIN ---------- */\n\nmain {\n    width: 1000px;\n    text-align: center;\n    \n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: auto 1fr 1fr;\n}\n\n.weather-heading {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    grid-area: 1 / 1 / 2 / 3;\n    justify-self: center;\n}\n\n.weather-heading h2 {\n    margin: 0;\n}\n\n.weather-heading p {\n    margin: 0;\n}\n\n.current-weather-overview {\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-template-rows: 1fr 1fr;\n}\n\n.current-weather-overview > img {\n    width: 80px;\n    height: auto;\n\n    grid-area: 1 / 1 / 2 / 2;\n}\n\n.current-weather-overview > p:nth-child(2) {\n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.current-weather-overview > p:last-child {\n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.current-weather-details {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr 1fr;\n}\n\n.current-weather-details > div {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-template-rows: 1fr 1fr;\n}\n\n.current-weather-details > div > img {\n    width: 30px;\n    height: auto;\n\n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.current-weather-details > div > p {\n    margin: 0;\n\n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.weekly-forecast {\n    display: flex;\n    flex-direction: column;\n}\n\n.forecast-item {\n    display: flex;\n}\n\n.rain-forecast {\n    display: flex;\n}\n\n.rain-forecast img {\n    width: 40px;\n    height: auto;\n}","",{version:3,sources:["webpack://./src/core/style.css"],names:[],mappings:"AAAA;;;IAGI,sBAAsB;IACtB,2BAA2B;IAC3B,8BAA8B;AAClC;;AAEA;;IAEI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,SAAS;IACT,2BAA2B;IAC3B,kFAAkF;;IAElF,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,yBAAyB;;IAEzB,aAAa;IACb,kCAAkC;IAClC,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;;IAEZ,mBAAmB;AACvB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;;IAET,iBAAiB;AACrB;;AAEA,+BAA+B;;AAE/B;IACI,aAAa;IACb,kBAAkB;;IAElB,aAAa;IACb,8BAA8B;IAC9B,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,wBAAwB;IACxB,oBAAoB;AACxB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,wBAAwB;;IAExB,aAAa;IACb,+BAA+B;IAC/B,2BAA2B;AAC/B;;AAEA;IACI,WAAW;IACX,YAAY;;IAEZ,wBAAwB;AAC5B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,+BAA+B;IAC/B,2BAA2B;AAC/B;;AAEA;IACI,WAAW;IACX,YAAY;;IAEZ,wBAAwB;AAC5B;;AAEA;IACI,SAAS;;IAET,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,WAAW;IACX,YAAY;AAChB",sourcesContent:["*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nhtml,\nbody {\n    width: 100%;\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    background: rgb(255,105,97);\n    background: linear-gradient(0deg, rgba(255,105,97,1) 0%, rgba(253,253,150,1) 100%);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nheader {\n    margin: 20px 40px 30px;\n    width: calc(100vw - 80px);\n    \n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n}\n\n.site-logo {\n    width: 50px;\n    height: auto;\n\n    justify-self: start;\n}\n\n.search-bar {\n    justify-self: center;\n}\n\nheader > div:last-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n\n    justify-self: end;\n}\n\n/* ---------- MAIN ---------- */\n\nmain {\n    width: 1000px;\n    text-align: center;\n    \n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: auto 1fr 1fr;\n}\n\n.weather-heading {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    grid-area: 1 / 1 / 2 / 3;\n    justify-self: center;\n}\n\n.weather-heading h2 {\n    margin: 0;\n}\n\n.weather-heading p {\n    margin: 0;\n}\n\n.current-weather-overview {\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-template-rows: 1fr 1fr;\n}\n\n.current-weather-overview > img {\n    width: 80px;\n    height: auto;\n\n    grid-area: 1 / 1 / 2 / 2;\n}\n\n.current-weather-overview > p:nth-child(2) {\n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.current-weather-overview > p:last-child {\n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.current-weather-details {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr 1fr;\n}\n\n.current-weather-details > div {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-template-rows: 1fr 1fr;\n}\n\n.current-weather-details > div > img {\n    width: 30px;\n    height: auto;\n\n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.current-weather-details > div > p {\n    margin: 0;\n\n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.weekly-forecast {\n    display: flex;\n    flex-direction: column;\n}\n\n.forecast-item {\n    display: flex;\n}\n\n.rain-forecast {\n    display: flex;\n}\n\n.rain-forecast img {\n    width: 40px;\n    height: auto;\n}"],sourceRoot:""}]);const i=c},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,r,o){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(a)for(var i=0;i<this.length;i++){var d=this[i][0];null!=d&&(c[d]=!0)}for(var s=0;s<e.length;s++){var u=[].concat(e[s]);a&&c[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var o={},c=[],i=0;i<e.length;i++){var d=e[i],s=a.base?d[0]+a.base:d[0],u=o[s]||0,l="".concat(s," ").concat(u);o[s]=u+1;var p=n(l),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=r(m,a);a.byIndex=i,t.splice(i,0,{identifier:l,updater:A,references:1})}c.push(l)}return c}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var o=a(e=e||[],r=r||{});return function(e){e=e||[];for(var c=0;c<o.length;c++){var i=n(o[c]);t[i].references--}for(var d=a(e,r),s=0;s<o.length;s++){var u=n(o[s]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}o=d}}},659:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,r&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={id:a,exports:{}};return e[a](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=a[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{var e=n(72),t=n.n(e),a=n(825),r=n.n(a),o=n(659),c=n.n(o),i=n(56),d=n.n(i),s=n(540),u=n.n(s),l=n(113),p=n.n(l),m=n(360),A={};A.styleTagTransform=p(),A.setAttributes=d(),A.insert=c().bind(null,"head"),A.domAPI=r(),A.insertStyleElement=u(),t()(m.A,A),m.A&&m.A.locals&&m.A.locals;const f=n.p+"b3f72bd28de7de7a8acb.png";function h(e){return`${["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"][e.getDay()]}, ${e.getDate()} ${["January","February","March","April","May","June","July","August","September","October","November","December"][e.getMonth()]} ${e.getFullYear()}`}function g(e,t){const n=document.querySelector("[data-current-temp]"),a=document.querySelector("[data-feels-like]");"fahrenheit"===e&&"celsius"===t?(n.textContent=n.dataset.temperatureCelsius,a.textContent=a.dataset.temperatureCelsius):"celsius"===e&&"fahrenheit"===t&&(n.textContent=n.dataset.temperatureFahrenheit,a.textContent=a.dataset.temperatureFahrenheit)}function C(e,t){const n=document.querySelector("[data-wind-speed]");"mph"===e&&"kph"===t?n.textContent=n.dataset.speedKph:"kph"===e&&"mph"===t&&(n.textContent=n.dataset.speedMph)}const y=n.p+"2557bb7504eaeca2d0fe.png",b=n.p+"e231e0e36fa0bbea491b.png",w=n.p+"3fa25f3d3a2cb3226fa2.png",x=n.p+"6908724de523f0a843d4.png",v=n.p+"09760300102da7b56f73.png",I=n.p+"1a91017026baae098f60.png",E=n.p+"909cb8645b43d69b368b.png",B=n.p+"8c8c943018dd7508b11c.png";function S(e){const t=document.createElement("div");t.classList.add("forecast-item");const n=document.createElement("p");n.setAttribute("data-forecast-date",""),n.setAttribute("data-forecast-day",e);const a=document.createElement("p"),r=document.createElement("span");r.setAttribute("data-forecast-max-temp",""),r.setAttribute("data-forecast-day",e);const o=document.createElement("span");o.setAttribute("data-temperature-unit",""),a.append(r,o);const c=document.createElement("p"),i=document.createElement("span");i.setAttribute("data-forecast-min-temp",""),i.setAttribute("data-forecast-day",e);const d=document.createElement("span");d.setAttribute("data-temperature-unit",""),c.append(i,d);const s=document.createElement("div");s.classList.add("rain-forecast");const u=new Image;u.src=x;const l=document.createElement("p"),p=document.createElement("span");return p.setAttribute("data-forecast-rain",""),p.setAttribute("data-forecast-day",e),l.append(p,"%"),s.appendChild(u),s.appendChild(l),t.appendChild(n),t.appendChild(a),t.appendChild(c),t.appendChild(s),t}(()=>{const e=document.querySelector("body"),t=document.createElement("header"),n=document.createElement("div");n.appendChild(function(){const e=document.createElement("button");return e.classList.add("unit-toggle"),e.textContent="°C, km/h",e.addEventListener("click",(()=>{!function(){const e=localStorage.getItem("temperatureUnit"),t=localStorage.getItem("speedUnit"),n="celsius",a="kph";localStorage.setItem("temperatureUnit",n),localStorage.setItem("speedUnit",a),document.querySelectorAll("[data-temperature-unit]").forEach((e=>{e.dataset.temperatureUnit=n,e.textContent="°C"})),document.querySelectorAll("[data-speed-unit]").forEach((e=>{e.dataset.speedUnit=a,e.textContent="km/h"})),g(e,n),C(t,a)}()})),e}()),n.appendChild(function(){const e=document.createElement("button");return e.classList.add("unit-toggle"),e.textContent="°F, mph",e.addEventListener("click",(()=>{!function(){const e=localStorage.getItem("temperatureUnit"),t=localStorage.getItem("speedUnit"),n="fahrenheit",a="mph";localStorage.setItem("temperatureUnit",n),localStorage.setItem("speedUnit",a),document.querySelectorAll("[data-temperature-unit]").forEach((e=>{e.dataset.temperatureUnit=n,e.textContent="°F"})),document.querySelectorAll("[data-speed-unit]").forEach((e=>{e.dataset.speedUnit=a,e.textContent="mph"})),g(e,n),C(t,a)}()})),e}()),t.appendChild(function(){const e=document.createElement("div");e.classList.add("logo");const t=new Image;return t.src=f,t.className="site-logo",e.appendChild(t),e}()),t.appendChild(function(){const e=document.createElement("div"),t=document.createElement("form"),n=document.createElement("input");return e.classList.add("search-bar"),t.appendChild(n),e.appendChild(t),t.addEventListener("submit",(e=>{e.preventDefault(),async function(e,t="1e59001d3205403fa8a174857242905",n=8){try{const a=function(e,t,n){return`http://api.weatherapi.com/v1/forecast.json?key=${e}&q=${t}&days=${n}`}(t,e,n),r=await fetch(a,{mode:"cors"}),o=await r.json();if(r.ok)return o;throw o}catch(e){throw e}}(n.value).then((e=>function(e){console.log(e),document.querySelector("[data-city]").textContent=e.location.name,document.querySelector("[data-country]").textContent=e.location.country;const t=new Date(e.location.localtime);document.querySelector("[data-current-date]").textContent=h(t);const n=document.querySelector("[data-time-now]"),a=t.toTimeString();n.textContent=`${a.substring(0,2)}:${a.substring(3,5)}`,document.querySelector("[data-is-day]").dataset.isDay=1===e.current.is_day?"true":"false";const r=document.querySelector("[data-current-temp]");r.dataset.temperatureFahrenheit=e.current.temp_f,r.dataset.temperatureCelsius=e.current.temp_c;const o=document.querySelector("[data-feels-like]");o.dataset.temperatureFahrenheit=e.current.feelslike_f,o.dataset.temperatureCelsius=e.current.feelslike_c,"celsius"===localStorage.getItem("temperatureUnit")?(r.textContent=e.current.temp_c,o.textContent=e.current.feelslike_c):"fahrenheit"===localStorage.getItem("temperatureUnit")&&(r.textContent=e.current.temp_f,o.textContent=e.current.feelslike_f),document.querySelector("[data-general-forecast]").textContent=e.current.condition.text,document.querySelector("[data-wind-direction]").textContent=e.current.wind_dir,document.querySelector("[data-humidity]").textContent=e.current.humidity;const c=document.querySelector("[data-wind-speed]");c.dataset.speedMph=e.current.wind_mph,c.dataset.speedKph=e.current.wind_kph,"kph"===localStorage.getItem("speedUnit")?c.textContent=e.current.wind_kph:"mph"===localStorage.getItem("speedUnit")&&(c.textContent=e.current.wind_mph),document.querySelector("[data-chance-of-rain]").textContent=e.forecast.forecastday[0].day.daily_chance_of_rain,document.querySelector("[data-uv-index]").textContent=e.current.uv;for(let t=1;t<=7;t++){document.querySelector(`[data-forecast-date][data-forecast-day="${t}"]`).textContent=h(new Date(e.forecast.forecastday[t].date));const n=document.querySelector(`[data-forecast-max-temp][data-forecast-day="${t}"]`),a=document.querySelector(`[data-forecast-min-temp][data-forecast-day="${t}"]`);"celsius"===localStorage.getItem("temperatureUnit")?(n.textContent=e.forecast.forecastday[t].day.maxtemp_c,a.textContent=e.forecast.forecastday[t].day.mintemp_c):"fahrenheit"===localStorage.getItem("temperatureUnit")&&(n.textContent=e.forecast.forecastday[t].day.maxtemp_f,a.textContent=e.forecast.forecastday[t].day.mintemp_f),document.querySelector(`[data-forecast-rain][data-forecast-day="${t}"]`).textContent=e.forecast.forecastday[t].day.daily_chance_of_rain}}(e))).catch((e=>function(e){console.log(e),e.error&&e.error.code?1006===e.error.code?console.log("Error: No matching location found."):console.error(`Error: ${e.error.message}`):console.error("An unknown error occurred.",e)}(e)))})),e}()),t.appendChild(n);const a=document.createElement("footer");e.appendChild(t),e.appendChild(function(){const e=document.createElement("main"),t=document.createElement("section");return t.classList.add("current-weather-details"),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=w;const n=document.createElement("p");n.textContent="Feels like";const a=document.createElement("div"),r=document.createElement("span");r.setAttribute("data-feels-like",""),r.setAttribute("data-temperature-fahrenheit",""),r.setAttribute("data-temperature-celsius","");const o=document.createElement("span");return o.setAttribute("data-temperature-unit",""),a.append(r,o),e.appendChild(t),e.appendChild(n),e.appendChild(a),e}()),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=E;const n=document.createElement("p");n.textContent="Wind direction";const a=document.createElement("span");return a.setAttribute("data-wind-direction",""),e.appendChild(t),e.appendChild(n),e.appendChild(a),e}()),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=v;const n=document.createElement("p");n.textContent="Humidity";const a=document.createElement("div"),r=document.createElement("span");return r.setAttribute("data-humidity",""),a.append(r,"%"),e.appendChild(t),e.appendChild(n),e.appendChild(a),e}()),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=B;const n=document.createElement("p");n.textContent="Wind speed";const a=document.createElement("div"),r=document.createElement("span");r.setAttribute("data-wind-speed",""),r.setAttribute("data-speed-mph",""),r.setAttribute("data-speed-kph","");const o=document.createElement("span");return o.setAttribute("data-speed-unit",""),a.append(r,o),e.appendChild(t),e.appendChild(n),e.appendChild(a),e}()),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=x;const n=document.createElement("p");n.textContent="Chance of rain";const a=document.createElement("div"),r=document.createElement("span");return r.setAttribute("data-chance-of-rain",""),a.append(r,"%"),e.appendChild(t),e.appendChild(n),e.appendChild(a),e}()),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=I;const n=document.createElement("p");n.textContent="UV index";const a=document.createElement("span");return a.setAttribute("data-uv-index",""),e.appendChild(t),e.appendChild(n),e.appendChild(a),e}()),e.appendChild(function(){const e=document.createElement("section");e.classList.add("weather-heading");const t=document.createElement("h2"),n=document.createElement("span"),a=document.createElement("span");n.textContent="Singapore",a.textContent="Singapore",n.setAttribute("data-city",""),a.setAttribute("data-country",""),t.append(n,", ",a);const r=document.createElement("p"),o=document.createElement("span"),c=document.createElement("span");return o.setAttribute("data-current-date",""),c.setAttribute("data-time-now",""),r.append(o," | ",c),e.appendChild(t),e.appendChild(r),e}()),e.appendChild(function(){const e=document.createElement("section");e.classList.add("current-weather-overview");const t=new Image;t.setAttribute("data-is-day","");const n=new MutationObserver((e=>{e.forEach((e=>{"attributes"===e.type&&(console.log("Day/night changed"),n.disconnect(),"true"===t.getAttribute("data-is-day")?t.src=y:t.src=b,n.observe(t,{attributes:!0}))}))}));n.observe(t,{attributes:!0});const a=document.createElement("span");a.setAttribute("data-current-temp",""),a.setAttribute("data-temperature-fahrenheit",""),a.setAttribute("data-temperature-celsius","");const r=document.createElement("span");r.setAttribute("data-temperature-unit","");const o=document.createElement("p");o.append(a,r);const c=document.createElement("p");return c.setAttribute("data-general-forecast",""),e.appendChild(t),e.appendChild(o),e.appendChild(c),e}()),e.appendChild(t),e.appendChild(function(){const e=document.createElement("section");e.classList.add("weekly-forecast");const t=document.createElement("h2");t.textContent="Weekly Forecast";const n=document.createElement("div");n.classList.add("forecast-list");for(let e=1;e<=7;e++)n.appendChild(S(e));return e.appendChild(t),e.appendChild(n),e}()),e}()),e.appendChild(a)})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,