(()=>{"use strict";var e={360:(e,t,n)=>{n.d(t,{A:()=>c});var r=n(354),a=n.n(r),o=n(314),i=n.n(o)()(a());i.push([e.id,"*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nhtml,\nbody {\n    width: 100%;\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    background: rgb(255,105,97);\n    background: linear-gradient(0deg, rgba(255,105,97,1) 0%, rgba(253,253,150,1) 100%);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nheader {\n    margin: 20px 40px 30px;\n    width: calc(100vw - 80px);\n    \n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n}\n\n.site-logo {\n    width: 50px;\n    height: auto;\n\n    justify-self: start;\n}\n\n.search-bar {\n    justify-self: center;\n}\n\nheader > div:last-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n\n    justify-self: end;\n}\n\n/* ---------- MAIN ---------- */\n\nmain {\n    width: 1000px;\n    text-align: center;\n    \n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: auto 1fr 1fr;\n}\n\n.weather-heading {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    grid-area: 1 / 1 / 2 / 3;\n    justify-self: center;\n}\n\n.weather-heading h2 {\n    margin: 0;\n}\n\n.weather-heading p {\n    margin: 0;\n}\n\n.current-weather-overview {\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-template-rows: 1fr 1fr;\n}\n\n.current-weather-overview > img {\n    width: 80px;\n    height: auto;\n\n    grid-area: 1 / 1 / 2 / 2;\n}\n\n.current-weather-overview > p:nth-child(2) {\n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.current-weather-overview > p:last-child {\n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.current-weather-details {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr 1fr;\n}\n\n.current-weather-details > div {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-template-rows: 1fr 1fr;\n}\n\n.current-weather-details > div > img {\n    width: 30px;\n    height: auto;\n\n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.current-weather-details > div > p {\n    margin: 0;\n\n    grid-area: 1 / 2 / 2 / 3;\n}","",{version:3,sources:["webpack://./src/core/style.css"],names:[],mappings:"AAAA;;;IAGI,sBAAsB;IACtB,2BAA2B;IAC3B,8BAA8B;AAClC;;AAEA;;IAEI,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,SAAS;IACT,2BAA2B;IAC3B,kFAAkF;;IAElF,aAAa;IACb,sBAAsB;IACtB,mBAAmB;AACvB;;AAEA;IACI,sBAAsB;IACtB,yBAAyB;;IAEzB,aAAa;IACb,kCAAkC;IAClC,mBAAmB;AACvB;;AAEA;IACI,WAAW;IACX,YAAY;;IAEZ,mBAAmB;AACvB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;;IAET,iBAAiB;AACrB;;AAEA,+BAA+B;;AAE/B;IACI,aAAa;IACb,kBAAkB;;IAElB,aAAa;IACb,8BAA8B;IAC9B,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,SAAS;;IAET,wBAAwB;IACxB,oBAAoB;AACxB;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,SAAS;AACb;;AAEA;IACI,wBAAwB;;IAExB,aAAa;IACb,+BAA+B;IAC/B,2BAA2B;AAC/B;;AAEA;IACI,WAAW;IACX,YAAY;;IAEZ,wBAAwB;AAC5B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,wBAAwB;AAC5B;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,+BAA+B;AACnC;;AAEA;IACI,aAAa;IACb,+BAA+B;IAC/B,2BAA2B;AAC/B;;AAEA;IACI,WAAW;IACX,YAAY;;IAEZ,wBAAwB;AAC5B;;AAEA;IACI,SAAS;;IAET,wBAAwB;AAC5B",sourcesContent:["*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n}\n\nhtml,\nbody {\n    width: 100%;\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    background: rgb(255,105,97);\n    background: linear-gradient(0deg, rgba(255,105,97,1) 0%, rgba(253,253,150,1) 100%);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n\nheader {\n    margin: 20px 40px 30px;\n    width: calc(100vw - 80px);\n    \n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    align-items: center;\n}\n\n.site-logo {\n    width: 50px;\n    height: auto;\n\n    justify-self: start;\n}\n\n.search-bar {\n    justify-self: center;\n}\n\nheader > div:last-child {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n\n    justify-self: end;\n}\n\n/* ---------- MAIN ---------- */\n\nmain {\n    width: 1000px;\n    text-align: center;\n    \n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: auto 1fr 1fr;\n}\n\n.weather-heading {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    grid-area: 1 / 1 / 2 / 3;\n    justify-self: center;\n}\n\n.weather-heading h2 {\n    margin: 0;\n}\n\n.weather-heading p {\n    margin: 0;\n}\n\n.current-weather-overview {\n    grid-area: 2 / 1 / 3 / 2;\n\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-template-rows: 1fr 1fr;\n}\n\n.current-weather-overview > img {\n    width: 80px;\n    height: auto;\n\n    grid-area: 1 / 1 / 2 / 2;\n}\n\n.current-weather-overview > p:nth-child(2) {\n    grid-area: 1 / 2 / 2 / 3;\n}\n\n.current-weather-overview > p:last-child {\n    grid-area: 2 / 2 / 3 / 3;\n}\n\n.current-weather-details {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr 1fr;\n}\n\n.current-weather-details > div {\n    display: grid;\n    grid-template-columns: auto 1fr;\n    grid-template-rows: 1fr 1fr;\n}\n\n.current-weather-details > div > img {\n    width: 30px;\n    height: auto;\n\n    grid-area: 1 / 1 / 3 / 2;\n}\n\n.current-weather-details > div > p {\n    margin: 0;\n\n    grid-area: 1 / 2 / 2 / 3;\n}"],sourceRoot:""}]);const c=i},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var s=0;s<e.length;s++){var u=[].concat(e[s]);r&&i[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),t.push(u))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},i=[],c=0;c<e.length;c++){var d=e[c],s=r.base?d[0]+r.base:d[0],u=o[s]||0,l="".concat(s," ").concat(u);o[s]=u+1;var p=n(l),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var m=a(A,r);r.byIndex=c,t.splice(c,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var c=n(o[i]);t[c].references--}for(var d=r(e,a),s=0;s<o.length;s++){var u=n(o[s]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}o=d}}},659:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&(!e||!/^http(s?):/.test(e));)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{var e=n(72),t=n.n(e),r=n(825),a=n.n(r),o=n(659),i=n.n(o),c=n(56),d=n.n(c),s=n(540),u=n.n(s),l=n(113),p=n.n(l),A=n(360),m={};m.styleTagTransform=p(),m.setAttributes=d(),m.insert=i().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=u(),t()(A.A,m),A.A&&A.A.locals&&A.A.locals;const f=n.p+"b3f72bd28de7de7a8acb.png";const h=n.p+"2557bb7504eaeca2d0fe.png",g=n.p+"e231e0e36fa0bbea491b.png",C=n.p+"3fa25f3d3a2cb3226fa2.png",b=n.p+"6908724de523f0a843d4.png",w=n.p+"09760300102da7b56f73.png",v=n.p+"1a91017026baae098f60.png",y=n.p+"909cb8645b43d69b368b.png",B=n.p+"8c8c943018dd7508b11c.png";(()=>{const e=document.querySelector("body"),t=document.createElement("header"),n=document.createElement("div");n.appendChild(function(){const e=document.createElement("button");return e.classList.add("unit-toggle"),e.textContent="°C, m/s",e}()),n.appendChild(function(){const e=document.createElement("button");return e.classList.add("unit-toggle"),e.textContent="°F, mph",e}()),t.appendChild(function(){const e=document.createElement("div");e.classList.add("logo");const t=new Image;return t.src=f,t.className="site-logo",e.appendChild(t),e}()),t.appendChild(function(){const e=document.createElement("div"),t=document.createElement("form"),n=document.createElement("input");return e.classList.add("search-bar"),t.appendChild(n),e.appendChild(t),t.addEventListener("submit",(e=>{e.preventDefault(),async function(e,t="1e59001d3205403fa8a174857242905",n=7){try{const r=function(e,t,n){return`http://api.weatherapi.com/v1/forecast.json?key=${e}&q=${t}&days=${n}`}(t,e,n),a=await fetch(r,{mode:"cors"}),o=await a.json();if(a.ok)return o;throw o}catch(e){throw e}}(n.value).then((e=>function(e){console.log(e),document.querySelector("[data-city]").textContent=e.location.name,document.querySelector("[data-country]").textContent=e.location.country;const t=new Date(e.location.localtime),n=document.querySelector("[data-day-of-week]");switch(t.getDay()){case 0:n.textContent="Sunday";break;case 1:n.textContent="Monday";break;case 2:n.textContent="Tuesday";break;case 3:n.textContent="Wednesday";break;case 4:n.textContent="Thursday";break;case 5:n.textContent="Friday";break;case 6:n.textContent="Saturday";break;default:n.textContent=""}document.querySelector("[data-date]").textContent=`${t.getDate()} ${["January","February","March","April","May","June","July","August","September","October","November","December"][t.getMonth()]} ${t.getFullYear()}`;const r=document.querySelector("[data-time-now]"),a=t.toTimeString();r.textContent=`${a.substring(0,2)}:${a.substring(3,5)}`,document.querySelector("[data-is-day]").dataset.isDay=1===e.current.is_day?"true":"false";const o=document.querySelector("[data-current-temp]"),i=document.querySelector("[data-temperature-unit]");"celsius"===i.dataset.temperatureUnit?(o.textContent=e.current.temp_c,i.textContent="°C"):"fahrenheit"===i.dataset.temperatureUnit&&(o.textContent=e.current.temp_f,i.textContent="°F"),document.querySelector("[data-general-forecast]")}(e))).catch((e=>function(e){console.log(e),e.error&&e.error.code?1006===e.error.code?console.log("Error: No matching location found."):console.error(`Error: ${e.error.message}`):console.error("An unknown error occurred.",e)}(e)))})),e}()),t.appendChild(n);const r=document.createElement("footer");e.appendChild(t),e.appendChild(function(){const e=document.createElement("main"),t=document.createElement("section");return t.classList.add("current-weather-details"),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=C;const n=document.createElement("p");n.textContent="Feels like";const r=document.createElement("div"),a=document.createElement("span");a.setAttribute("data-feels-like","");const o=document.createElement("span");return o.setAttribute("data-temperature-unit",""),r.append(a,o),e.appendChild(t),e.appendChild(n),e.appendChild(r),e}()),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=y;const n=document.createElement("p");n.textContent="Wind direction";const r=document.createElement("span");return r.setAttribute("data-wind-direction",""),e.appendChild(t),e.appendChild(n),e.appendChild(r),e}()),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=w;const n=document.createElement("p");n.textContent="Humidity";const r=document.createElement("div"),a=document.createElement("span");return a.setAttribute("data-humidity",""),r.append(a,"%"),e.appendChild(t),e.appendChild(n),e.appendChild(r),e}()),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=B;const n=document.createElement("p");n.textContent="Wind speed";const r=document.createElement("div"),a=document.createElement("span");a.setAttribute("data-wind-speed","");const o=document.createElement("span");return o.setAttribute("data-speed-unit",""),r.append(a,o),e.appendChild(t),e.appendChild(n),e.appendChild(r),e}()),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=b;const n=document.createElement("p");n.textContent="Chance of rain";const r=document.createElement("div"),a=document.createElement("span");return a.setAttribute("data-chance-of-rain",""),r.append(a,"%"),e.appendChild(t),e.appendChild(n),e.appendChild(r),e}()),t.appendChild(function(){const e=document.createElement("div"),t=new Image;t.src=v;const n=document.createElement("p");n.textContent="UV index";const r=document.createElement("span");return r.setAttribute("data-uv-index",""),e.appendChild(t),e.appendChild(n),e.appendChild(r),e}()),e.appendChild(function(){const e=document.createElement("section");e.classList.add("weather-heading");const t=document.createElement("h2"),n=document.createElement("span"),r=document.createElement("span");n.textContent="Singapore",r.textContent="Singapore",n.setAttribute("data-city",""),r.setAttribute("data-country",""),t.append(n,", ",r);const a=document.createElement("p"),o=document.createElement("span"),i=document.createElement("span"),c=document.createElement("span");return o.setAttribute("data-day-of-week",""),i.setAttribute("data-date",""),c.setAttribute("data-time-now",""),a.append(o,", ",i," | ",c),e.appendChild(t),e.appendChild(a),e}()),e.appendChild(function(){const e=document.createElement("section");e.classList.add("current-weather-overview");const t=new Image;t.setAttribute("data-is-day","");const n=new MutationObserver((e=>{e.forEach((e=>{"attributes"===e.type&&(console.log("Day/night changed"),n.disconnect(),"true"===t.getAttribute("data-is-day")?t.src=h:t.src=g,n.observe(t,{attributes:!0}))}))}));n.observe(t,{attributes:!0});const r=document.createElement("span");r.setAttribute("data-current-temp","");const a=document.createElement("span");a.setAttribute("data-temperature-unit","");const o=document.createElement("p");o.append(r,a);const i=document.createElement("p");return i.setAttribute("data-general-forecast",""),e.appendChild(t),e.appendChild(o),e.appendChild(i),e}()),e.appendChild(t),e}()),e.appendChild(r)})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,